name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository's code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Step 3: Install project dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          pip install -r requirements.txt

      # Step 4: Build the package
      - name: Build package
        run: python setup.py sdist bdist_wheel

      # Step 5: Run unit tests
      - name: Run tests
        run: python -m unittest discover

  docker:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      # Step 1: Check out the repository's code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Extract the version from setup.py
      - name: Extract version
        id: extract_version
        run: |
          version=$(python setup.py --version)
          echo "VERSION=$version" >> $GITHUB_ENV

      # Step 5: Build and push Docker image with version tag
      - name: 'Build Inventory Image'
        run: |
          docker build . --tag ghcr.io/pageotd/shortener-app:${{ env.VERSION }}
          docker push ghcr.io/pageotd/shortener-app:${{ env.VERSION }}
